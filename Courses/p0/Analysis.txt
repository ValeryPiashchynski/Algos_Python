## Task0
According to the various sources https://www.geeksforgeeks.org/complexity-cheat-sheet-for-python-operations/, access to an array element in Python3 is O(1)

## Task1
Two loops (in general), skipping constant, -> O(n)

## Task2
On line number 30 the most costly loop -> O(n). Dict access in the Python3 is O(1), we also have some scans in those dict.
So, the general case, for this task would be, I assume, O(n)

## Task3
Sort... we have sort here. Iteration over the arrays would be O(n), but according to the wiki, Python3(Cython) uses Timsort (https://en.wikipedia.org/wiki/Timsort),
and the time complexity for this function would be O(n * log(n))

## Task4
The same as 3. Loop will be O(n), but according to a task, we have to sort our array with Timsort under the hood.
The resulting time complexity will be O(n * log(n))